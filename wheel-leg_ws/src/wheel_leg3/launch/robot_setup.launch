<!-- 加载机器人关节驱动器，以及观测器脚本 -->
<launch>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find wheel_leg3)/config/robot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/wheel_leg3" args="wheel1_velocity_controller wheel2_velocity_controller joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/wheel_leg3/joint_states" />
  </node>
  <!-- convert ground trouth odom to tf -->
  <node name="odom_to_tf" pkg="wheel_leg3" type="odom_topic_to_tf.py" >
    <param name="~odom_name" value="/ground_truth/state" />
    <param name="~static_frame" value="world" />
    <param name="~goal_frame" value="base_footprint" />
  </node>
  <!-- balance state listerner -->
  <node name="balance_observer" pkg="wheel_leg3" type="balance_observer.py" >
    <param name="~imu_topic" value="/imu" />
    <param name="~odom_topic" value="/ground_truth/state" />
    <param name="~encoder1_topic" value="/wheel_leg3/wheel1_velocity_controller/command" />
    <param name="~encoder2_topic" value="/wheel_leg3/wheel2_velocity_controller/command" />
    <param name="~wheel_distance" value="0.236" />
    <param name="~wheel_radius" value="0.04" />
  </node>
  <!-- Rviz -->
  <!-- <node
  name="rviz"
  pkg="rviz"
  type="rviz"
  args="-d $(find wheel_leg3)/urdf/urdf.rviz" /> -->


</launch>